	'-----------------------------------------------------
	' Gesture recognition
	'-----------------------------------------------------

	'define some matrices
	z=32

	' B image being processed
	' A temp image for load
	' C background
	' T temp image for masking

	DIM B(32,32),A(32,32),C(32,32),T(32,32)


' 	test code
if t=1 then
	!IMAGE LOAD 32 "back.jpg"
	LIST C=@!
	!IMAGE LOAD 32 "object.jpg"
	LIST B=@!

	a=`p
        goto processimg
endif

	print "Get static background image"
	f=0
	gosub camgrab

	list c=@b
	'print "Background"
	'mat print c

	'-----------------------------------------------------
	' main loop
	'-----------------------------------------------------

mainloop:
        print "ready?"
        a=$kbd

	f=1
	gosub camgrab

processimg:

	SCALE @c-@b,15,1,0
	LIST b=@!

        out @{4,27,`[,`2,`J}  'clear screen

	if a=`p then
            print @B:z
        endif

	MAT z=sum(b,2)  'Horizontal Intensity Histo

	'-----------------------------------------------------
	' find torso
	'-----------------------------------------------------

	L=0
	M=0
	R=0
	S=0
	P=3  'threshold arm
	Q=10 'threshol body

	FOR I=0 TO 31
		IF (@z[i]>=P) and (L=0) THEN
		    L=i
		ENDIF
		IF (@z[i]>=Q) and (m=0) THEN
		    m=i
		ENDIF
		IF (@z[i]<Q) and (M>0) and (s=0) THEN
		    S=i
		ENDIF
		IF (@z[i]<P) and (S>0) and (r=0) THEN
		    R=i
		ENDIF
	NEXT I

	W=S-M
	L=M-L
	R=R-S
	N=S

	PRINT "Torso Width=";W
	PRINT "L hand=     ";L
	PRINT "R hand=     ";R

        gosub initarm

	'-----------------------------------------------------
	' find left hand position
	'-----------------------------------------------------

	LIST T=@b
	LET T=ZER(M,0,31,31)   'mask off right-hand side

	gosub processarm

	if k=1 then
		PRINT "left arm straight"
		gosub larmout
	endif

	if k=2 then
		PRINT "left arm up"
		gosub larmup
	endif

	if k=3 then
		PRINT "left arm down"
		gosub rarmdown
	endif

	'-----------------------------------------------------
	' find right arm position
	'-----------------------------------------------------
rhs:
	LIST T=@B
	LET T=ZER(0,0,N,31)  	' mask off left-hand side

	gosub processarm

	if k=1 then
		PRINT "right arm straight"
		gosub rarmout
	endif

	if k=2 then
		PRINT "right arm up"
		gosub rarmup
	endif

	if k=3 then
		PRINT "right arm down"
		gosub rarmdown
	endif

mvarm:
        gosub movearm
	if t<>1 then mainloop
fin:
	end

'-----------------------------------------------------

processarm:
	'PRINT @T:32
	MAT Z=SUM(T,1) ' 1;T  'Vertical Intensity Histo
	'PRINT @z

	k=0

	M=0
	S=0
	P=1 'threshold arm

	FOR I=0 TO 31
		IF (@z[i]>=P) and (M=0) THEN
		    M=i
		ENDIF
		IF (@z[i]<P) and (s=0) and (m>0) THEN
		    S=i
		ENDIF
	NEXT I

	P=$MAX(@!)

        if p=0 then
           	print "nothing detected"
		return
        endif

	PRINT "Width=   ";S-M
	PRINT "Max=     ";

	IF (s-m)/p > 1 THEN
		k=1
	ELSE
		'diagonal arms 
		p=$IMAX(@!)
		PRINT p
		IF P<10 THEN
			k=2
		ELSE
			k=3
		ENDIF
	ENDIF 

	return

'-----------------------------------------------------
' load webcam (jpg) image
'-----------------------------------------------------
' F=0 return when image is static i.e. amount of change lt threshold
' F=1 return when image differs i.e. gt than threshold
'-----------------------------------------------------

camgrab:
	!image wait
	!image load 32
	LIST A=@!            'initialise prev image
loop:
	!image wait
	!image load 32      'load next image
	LIST B=@! 
	S=$abs($sum(@B-@A))  'compare with prev & next images
	print S
	if ((f=1) and (s>60)) or  ( (f=0) and (s<60)) then done    'if difference > threshold done
	LIST A=@B            'else prev = next
	goto loop            'go round again
done:
	return

'-----------------------------------------------------
'arm movements - based on 'dance hands' configuration
'-----------------------------------------------------
initarm:
    LIST v=16,141,86,248,41,103,103,161,0,206,144, 93, 95, 65,155,156,183
    return

movearm:
   print @v
   move @v,10,1000
   return

larmdown:
   v[11]=95   '-1
   v[12]=109  '+45
   return

larmout:
   v[11]=142   '+47
   v[12]=109   '+45
   return

larmup:
   v[11]=195   '+100
   v[12]=93    '+28
   return

rarmdown:
   v[14]=157   '1
   v[15]=138   '-45
   return

rarmout:
   v[14]=110   '-47
   v[15]=138   '-45
   return

rarmup:
   v[14]=56    '-100
   v[15]=155   '-28
   return

