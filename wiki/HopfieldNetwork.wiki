#summary Simple Hopfield associative memory

= Introduction =

==Very simple proof of concept demo==

Notice how the $SCALE command is used in threshold mode to convert binary to bipolar (1,-1) input.  Also MAT ZERO only zero the diagonal of a square matrix. To zero the complete matrix just use LIST function $ZERO.  Also the $HAM function calculates the hamming distance between two arrays. This return 0 if they are exactly alike or non zero if not. 

For more details on Hopfield networks: http://en.wikipedia.org/wiki/Hopfield_network

= Details =

<code language="vb">
'''''''''''''''''''''''''''''''''''''''''
'train a hopfield - 4 input
'''''''''''''''''''''''''''''''''''''''''
MAT DEF A;4;1
LIST A=$SCALE(@{4,1,0,1,0},1,1,-1)
MAT TRAN A;B
MAT PRINT A
MAT PRINT B
MAT MULT X;B;A
MAT ZERO X
MAT PRINT X
</code>

= Output =
{{{
: r
Run Program 
Create matrix 'A' 4x1
matrix 'A' 4x1
  1  -1   1  -1 
matrix 'B' 1x4
  1 
 -1 
  1 
 -1 
matrix 'X' 4x4
  0  -1   1  -1 
 -1   0  -1   1 
  1  -1   0  -1 
 -1   1  -1   0 
check for : 0,0,1,0

unit 0 : 0 + 1
unit 1 : 0 + -2
unit 2 : 1 + 2
unit 3 : 0 + -2
Converge ?
unit 0 : 1 + 2
unit 1 : 0 + -2
unit 2 : 1 + 2
unit 3 : 0 + -2
Converge ?
Yes - Returned: 1,0,1,0

End of program
Elapsed Time 00:00-001
}}}

Note: Syntax of this command is changing in future versions
  * MAT MULT X;B;A becomes MAT X=B*A
  * MAT TRAN A;B  becomes MAT B=A^
Which is I believe more readable !
