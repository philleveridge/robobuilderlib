#summary Windows Basic Client -  A front-end editor, comipler and download for Basic firmware

= Introduction =

A windows based editor and compiler to simplify working with Robobuilder Basic programs. The Basic firmware can work directly with all that is needed being a terminal program, however the client does make transferring programs from PC to Basic much simpler, and enables storage of programs and increase readability of programs.

The upper window is a standard text editor. Note it auto-generates line number and allows the use of labels (unlike the firmware version). 

The bottom windows shows the output of a compile. This can be transfered to the robot by connecting  via a serial link - use the red button (edit COM5 to be the port you use). 

The windows is then an interactive console on to the robot. Press z (to put robot in download mode) and then select download from the menu. The program will automatically compile if not already been performed.

== Key advantages of client ==

  * enable programs to be stored on PC
  * download  and transferred to basic firmware on robot 
  * auto generates line numbers (int increments of 5)
  * allows comments to be added (using ' )
  * allows labels
  * provides context sensitive colour coding
  * allows multi-line if/then/else/endif statements
  * allows const definition
  * Simple functions and procedures
  * Create image filter maps
  * Load binary files and reverse compile
  * basic VT100 terminal with com port selection
  * will check firmware version running on robot

== examples programs ==

{{{
'Example maze program
'Based on Robobuilder C tutorial
     stand 16
     print "Maze Program"
     let c=0
loop:
     let d=$psd
     lights d-10

     if d < 12 then
        gosub back
        goto loop
     endif
     
     if (c = 0) & (d < 30) then
        gosub leftturn90
        let c=1
        goto loop
     endif

     if (c = 1) & (d < 30) then
        gosub leftturn180
        let c=2
        goto loop
     endif
     
     if (c = 1) & (d < 30) then
         gosub rightturn90
         let c=0
         goto loop
     endif
          
     let c=0
     gosub forward
     goto loop
 
back:
     print ":"
     run 9     
     wait 1000
     return

leftturn90:
     print "<-"
     run 4
     run 4
     run 4
     wait 1000
     return
  
leftturn180:
     print "V"
     run 4
     run 4
     run 4
     run 4
     run 4
     wait 1000
     return
     
rightturn90:
     print "->"
     run 5
     run 5
     run 5
     run 5
     wait 1000
     return

forward:
     print "^"
     run 8
     run 8
     run 8
     wait 1000
     return
     
    
}}}

== working with RBasic.exe ==

When a program is compiled a file bindata.txt is created - and this file can then be loaded into basic.exe using 'z' option. It will also be automatically loaded into basic when it starts.

== Details ==
http://robobuilderlib.googlecode.com/svn/trunk/basic/BasicClient/Screenshot%20from%202012-09-07%2019:58:13.png