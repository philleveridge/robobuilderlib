#summary Java based Basic pre-compiler and transfer tool

= Introduction =

This enables more readable programs to be created and then transferred in a tokenised binary form to Basic running in firmware on the RBC unit


= Details =

Example session:

Example file:  test.rbas
{{{
'
' commentS make more readable
'
const Del 50  '50 ms delay

loop:
  A=A+1  ' notice LET is defaulted
  PRINT "Test";a
  WAIT Del
  goto Loop
}}}

Invoke jbasic:   java -jar JBasic.jar test.rbas

I actually alias this to jbasic to make it easier to type.

{{{
phil@phil-linux:~$ jbasic test.rbas
Compile test.rbas
-----Output-----
5 LET A=A+1
8 PRINT "Test";a
11 WAIT 50 
14 GOTO 5
 -----------
Constant defined
DEL 50
-----------
Labels defined
LOOP 5

0000 - AA  03  00  05  00  00  00  00  00  0F  00  41  2B  31  00  08  00  06  00  00  00  20  00  22  
0018 - 54  65  73  74  22  3B  41  00  0B  00  0C  00  32  00  29  00  00  0E  00  05  00  05  00  32  
0030 - 00  00  CC  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  

phil@phil-linux:~$ 
}}}

This will have created a bindata.txt - which can be loaded into LinuxBasic using z option or we can transfer to RBC running Basic firmware using -X option 
{{{
jbasic -X test.rbas

-----Transmit-----
Experimental:  JNI_OnLoad called.
Stable Library
=========================================
Native lib Version = RXTX-2.1-7
Java lib Version   = RXTX-2.1-7
Send bytes 0033 (1)% Used
}}}
Note: Uses Java RXTX library for comms


