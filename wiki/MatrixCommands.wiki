#summary Integer matrix commands

= Introduction =

Add your content here.

==Simple Matrices==
Matrix values are stored in LIST of the same name. Its up to the programmer to ensure list size matches the matrix size. So a 3x2 matrix is represented by a list of 6 elements. The matrix command will check and throw an error if size doesn't match.

  * MAT DEF   M=w,h           Define a matrix 'M' size wxh
  * MAT HIST  M,n             Returns in @! a histogram of matrix M
  * MAT PRINT M               Simple Print
  * MAT LET M=A op B          LET is option. op = +-/.`*`()^
    * Transpose           (^)
    * [Convolve]          (#)
    * Matrix product     `(*)`
    * Element by element  (+/-.)
    * M=ZER(x1,y1,x2,y2)  Zero matrix elements (or parts there off)
    * M=ZER               Zero matrix diagonal

= Examples =

Example defining a simple matrix

{{{
> MAT DEF Z=4,5
Create matrix 'Z' 4x5
> LIST Z=20,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0
> MAT PRINT Z
matrix 'Z' 4x5
  1   2   3   4 
  5   6   7   8 
  9   0   1   2 
  3   4   5   6 
  7   8   9   0 
> MAT DEF A=3,2
Create matrix 'A' 3x2
> LIST A=6,1,2,3,4,5,6
> MAT PRINT A
matrix 'A' 3x2
  1   2   3 
  4   5   6 
> MAT A=ZER(1,0,2,1)
> MAT PRINT A
matrix 'A' 3x2
  1   0   0 
  4   0   0

> MAT DEF A=3,3
> LIST A=9,1,2,3,4,5,6,7,8,9
> MAT PRINT A
matrix 'A' 3x3
  1   2   3 
  4   5   6 
  7   8   9 
> MAT HIST A,1
> PRINT @!
6,15,24
}}}

For examples using Convolve see [Convolve wiki page]
Also see [AutoAssocNets Neural network] example that uses matrix commands and [HopfieldNetwork Hopfield network] example