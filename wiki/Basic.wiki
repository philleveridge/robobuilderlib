#summary Simple Mini Basic complier/interpreter
#labels Phase-Requirements
= Introduction =

This is still in an early development stage !!! 

This gives Robobuilder the ability to create simple actions in an elementary basic language. Download [http://code.google.com/p/robobuilderlib/source/browse/trunk/basic/Basic.hex basic.hex] on to the RBC module using the RBCUpgrade tool as per manual.

Turn of the RBC and connect a vt100 terminal emulator. You should see the following:
{{{
Basic 0.1
Commands: i r l c z
:
}}}

At the prompt type 
  * i - input a new program
  * r - run current program
  * l - list current program
  * c - clear memory
  * z - download (tbc)

See examples below of programs that have been tested

= Details =

{{{

Language Spec:
VAR    A-Z  (integer only)
OPER   + - * \ ( ) = < > % <= >= <>
CMD    LET:FOR:NEXT:GOTO:IF:THEN:ELSE:PRINT:END:SET:XACT:WAIT
STRING " ... "
EXPR1  VAR | LITERAL
EXPR2  EXPR1 | STRING
LIST   EXPR2 [,EXPR2]
EXPR   EXPR1 OPER EXPR1  

SYNTAX:
[LINE no] LET  VAR '=' EXPR 
[LINE no] GOTO [Line No]
[LINE no] PRINT LIST [;]
[LINE No] END
[LINE no] IF  EXPR THEN LINE no ELSE Line No
[LINE No] FOR VAR '=' EXPR 'To' EXPR
[LINE No] NEXT VAR
[LINE No] XACT EXPR
[LINE No] WAIT number
[Line No] SERVO ID=EXPR | '@'
[LINE No] SCENE LIST
[Line No] GOSUB [Line No]
[Line No] RETURN

--------------------------TBD ---------------------------
[LINE No] PUT VAR '=' $PORTA|B|C:0-7

Special register access ($)
$X, $Y, $Z   accelerometer
$SERVO:id    position of servo id 
$IR          wait for OR input
$KBD         wait for keyboard press
$PSD         PSD sensor value
$VOLT        Battery voltage
$TICK        Number of tenths of a second
$RND         Random number  - (not tested)
$MIC         Microphone level
Examples:
LET A=$IR           //get char from IR and transfer to A 
LET A=$SERVO:id     //let A get position of servo id 

Special Commands
SERVO ID=POS  set servo id to position POS / @
PUT 	      enable access to PORTS/SPECIAL REGISTER
SCENE         sends a Scene - 16 Servo Positions, Plus time, no frames
WAIT          Wait for a an amount of time in ms
XACT          *TBC* - Call any action using code i.e. XACT 0, would punch left, XACT 17 a wave
Built in motions:
0x00:  PunchLeft
0x01:  PunchRight
0x02:  SidewalkLeft
0x03:  SidewalkRight
0x04:  TurnLeft
0x05:  TurnRight
0x06:  GetupBack
0x07:  GetupFront
0x08:  WalkForward
0x09:  WalkBackward
0x0A:  lshoot
0x0B:  rshoot
0x0C:  rsidewalk
0x0D:  lsidewalk
0x0E:  standupr
0x0F:  standupf
0x10:  sitdown
0x11:  hi
0x12:  kick left front turn
0x20:  basic Pose
}}}

= Examples  =

These are available from examples sub- folder
http://code.google.com/p/robobuilderlib/source/browse/#svn/trunk/examples

{{{
a) simple loop
10 LET A=1
20 PRINT A
30 LET A=A+1
35 WAIT 500
40 IF A<10 THEN 20 
50 END

b) read from console and IR port
10 LET A=$KBD
20 PRINT A
30 LET A=$IR
40 PRINT A
50 GOTO 10

c) Loops
10 FOR A=1 to 5
20 PRINT A
30 NEXT A

d) compound PRINT
10 LET A=(5+3)*(2+1)
20 PRINT "The answer is ";A
30 END

e) read and set servo
This reads current position of servo 12 and then moves and extra 5
10 let a=$servo:12
20 print "Pos=";a
30 servo 12=a+5

f) read accelerometer values
10 print $TICK;" X=";$X;" Y=";$Y;" Z=";$Z
20 wait 500
30 goto 10

g) When fwd button pressed on IR do built in motion (8) - "walk forward"
10 let A=$IR
20 print "Received=";A
30 if a=4 then 40 else 10
40 xact 8
50 goto 10

}}}