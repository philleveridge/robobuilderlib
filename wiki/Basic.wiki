#summary Integer Basic interpreter for embedded systems
#labels Phase-Requirements
= Introduction =

_A functional BASIC interpreter running on the Robobuilder RBC unit, for those people who would like to try programming - but are daunted by the complexity of writing in C - and yet want more than Action builder, download and try it out !!_

This custom firmware for Robobuilder gives it the ability to create and store simple programs in an elementary BASIC language. The software is stable beta release. *_Always download latest version firmware _*

This BASIC is a simple integer version based on Dartmouth Basic (see wiki http://en.wikipedia.org/wiki/BASIC). But with some additional features to support robotics on the Robobuilder RBC robots.

See [GettingStarted Getting started] wiki page. 

For an in depth look at features  see [http://code.google.com/p/robobuilderlib/downloads/detail?name=Robobuilder%20Basic%20V2.2.2.pdf Robobuild Basic manual 2.2.2] for more details. And for example programs see :
  * [SimpleDemos] or
  * [BasicDemos] or
  * [AdvancedDemos]

== Feature Summary == 
  # A-Z 32 bit signed integer variables
  # IF THEN ELSE
  # GOTO & GOSUB/RETURN
  # [ForNext FOR NEXT] Loops
  # PRINT
  # END
  # [InputMode Simple] editor with Immediate mode so commands can be run directly
  # Debug mode to allow trace of programs
  # Full maths expression `+ * - /` and including MOD AND OR
  # [Walking#Generating_a_walking_gait Maths functions] such as SIN and COS
  # Developer environment with VT100 terminal support (Windows/Mono - see [BasicClient]
  # Special features including access to Servo (Read/ Write), sensors [SimpleDemos#10)_OUT_-_show_PSD_sensor_output_as_a_bar PSD] and [SimpleDemos#6)_read_accelerometer_values Accelerometer]
  # Lists (A-Z) (and [MatrixCommands Matrix commands])
  # [BuiltinMotion Built in motions] (19 including football kick)
  # Built in FFT - [sample FFT demo]  can access sound samples and process in realtime
  # Built in Neural network calculation see [neuron1 demo]
  # Event handling [SimpleDemos#22)_ON_event_base_routines ON GOSUB]
  # [SimpleDemos#17)_I2C_comm_example(s) I2C communication]
  # Offset feature supports different robot configs  
  # [SimpleDemos#20)_Reading_PF1_and_PF2 Hardware access] to LED and Buttons
  # Cross platform support for [LinuxBuild], Windows and [Omnima] (openwrt)
      # Includes extended commands for image processing [ImageDemos   see demo]
      # floating point arithmetic
      # Asynchronous move routing (PLY/REC)

See wiki page [LanguageSpec for language specification] details

== Recent updates ==

  # Event handling with ON TIME x GOSUB y and ON KEY GOSUB y : see [SimpleDemos#22)_ON_event_base_routines Example 22]
  # AND, OR and MOD are supported i.e. PRINT (1=1) AND (2=2) prints 1 (true). The old | % & still work as well 
   # Expression use 32 bit integer arithmetic - previously it was 16 bit, this make the range much better for complex expression - like above
  # There's a new variant of MOVE command MOVE A,B,C,D - see below
  # Command mode extensions
    # p option - set all servos passive 
    # Q option - queries all servo values and displays result 
  # New options on SCALE command to enable threshold 
  # List handling features. List are  separate from variable.
     # New List functions $SHUF and $MAP 
     # New List operators '+' '-' and '.' 
     # New options on LIST to support stacks and hence Procedure and Functions
     # New $SCALE function
  # Versions for Linux and Windows now has floating point. 
  # New extended commands: covering image processing ExtendedCommands 
  # MATRIX handling now standard
     # New demos [AutoAssocNets] and [HopfieldNetwork] show features in use
  # OUT options can now take a width field on its array
 
== Latest Bug fixes ==
     #  fix to expression handler and Cos function
     #  fix to edit lines 