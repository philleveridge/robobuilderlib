#summary Simple Mini Basic complier/interpreter
#labels Phase-Requirements
= Introduction =

This is still in a very early development stage !!!

It can only be accessed via *experimental mode*, by typing the following:
  * eC0 - program entry
  * eC1 - program run 
  * eC2 - program clear
  * eC3 - program dump

Typing r in idle mode will run the stored program if it exists

currently only XACT actually runs. More should follow soon.

= Details =

The ability to create simple actions in an elementary basic language

{{{
basic_load	read a program from the serial port and store in EEPROM
basic_run	run the program in eeprom
basic_clear	clear eeprom program(s)
basic_list 	show contents of eeprom

Language Spec:
VAR    A-Z  (integer only)
OPER   +-*\()=<>
CMD    LET:FOR:NEXT:GOTO:IF:THEN:ELSE:PRINT:END:SET:XACT:WAIT
STRING " ... "
EXPR1  VAR | LITERAL
EXPR2  EXPR1 | STRING
LIST   EXPR2 [,EXPR2]
EXPR   EXPR1 OPER EXPR1  

SYNTAX:
[LINE no] LET  VAR '=' EXPR 
[LINE no] GOTO [Line No]
[LINE no] PRINT EXPR | STRING    (TBD: Allow lists)
[LINE No] END
[LINE no] IF  EXPR THEN LINE no [ELSE Line No]
[LINE No] XACT EXPR

ALMOST THERE
[LINE No] FOR VAR '=' EXPR 'To' EXPR
[LINE No] NEXT

TBD
[LINE No] SET PORTA|B|C:0-7|ADC|PSD|IR|SERVO '=' EXPR
[LINE No] GET VAR '=' PORTA|B|C:0-7|ADC|PSD|IR|SERVO
[LINE No] SCENE LIST

Special Commands
SET        enable write access to PORTS/SPECIAL REGISTER
SCENE      sends a Scene - 16 Servo Positions, Plus time, no frames
XACT       Call any Experimental action using literal code i.e. XACT 0, does basic pose, XACT 17 a wave
WAIT       Will wait for a specified amount of time in ms
}}}

= Examples code that *should* work =

{{{
A) simple loop

10 LET A=1
20 PRINT A
30 LET A=A+1
35 WAIT 500
40 IF A<10 THEN 20 
50 END

B) read from console and IR port
10 LET A = $KBD
20 PRINT A
30 LET A = $IR
40 PRINT A
50 GOTO 10
}}}
